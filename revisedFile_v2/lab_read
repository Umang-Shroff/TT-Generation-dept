Sub StringMatchingLab22()
    Dim wsSource As Worksheet
    Dim wsDestL1 As Worksheet
    Dim wsDestL2 As Worksheet
    Dim wsDestL3 As Worksheet
    Dim cell As Range
    Dim subject As Variant
    Dim timeValue As String
    Dim destRow As Variant
    Dim col As Long
    Dim cellContent As String
    Dim startPos As Long
    Dim endPos As Long
    Dim regex As Object
    Dim matches As Object
    Dim match As Variant
    Dim labCode As String
    Dim destCell As Range
    Dim sourceA1Value As String ' Variable to hold the value of cell A1

    ' Set the source worksheet and destination worksheets for each lab
    Set wsSource = ThisWorkbook.Sheets("main")
    Set wsDestL1 = ThisWorkbook.Sheets("L1")
    Set wsDestL2 = ThisWorkbook.Sheets("L2")
    Set wsDestL3 = ThisWorkbook.Sheets("L3")

    ' Get the value from A1 in the source sheet
    sourceA1Value = wsSource.Range("A1").Value

    ' Clear any existing data in the subject columns (B onwards)
    Dim lastRow As Long
    lastRow = wsSource.Cells(wsSource.Rows.Count, 1).End(xlUp).Row
    wsDestL1.Range("A1:A" & lastRow).Value = wsSource.Range("A1:A" & lastRow).Value
    wsDestL2.Range("A1:A" & lastRow).Value = wsSource.Range("A1:A" & lastRow).Value
    wsDestL3.Range("A1:A" & lastRow).Value = wsSource.Range("A1:A" & lastRow).Value

    ' Initialize the regex object
    Set regex = CreateObject("VBScript.RegExp")
    regex.IgnoreCase = True
    regex.Global = True
    ' Modify the pattern to match both "(L1)" and "(L-1)", "(L2)", "(L-2)", "(L3)", "(L-3)"
    regex.Pattern = "(.*?)(\(L(-?\d+)\))" ' Pattern to capture (L1), (L2), (L3) along with the subject

    ' Loop through each row in the source worksheet
    For Each cell In wsSource.UsedRange.Rows
        ' Get the time value (the first cell in the row)
        timeValue = wsSource.Cells(cell.Row, 1).Value
        
        ' Loop through columns B to H (2 to 8)
        For col = 2 To 8 ' Columns B to H
            ' Check if the cell in the current column is not empty
            If wsSource.Cells(cell.Row, col).Value <> "" Then
                ' Get the full content of the cell
                cellContent = wsSource.Cells(cell.Row, col).Value

                ' Find matches using regular expression
                Set matches = regex.Execute(cellContent)
                
                ' Loop through all matches (subjects with lab codes)
                For Each match In matches
                    subject = Trim(match.SubMatches(0)) ' Extract the subject
                    labCode = Trim(match.SubMatches(1)) ' Extract the lab code (e.g., (L1), (L-1), etc.)
                    
                    ' Prepend the value from A1 in brackets to the subject
                    subject = "(" & sourceA1Value & ") " & subject

                    ' Determine the destination row for each lab code
                    Select Case labCode
                        Case "(L1)", "(L-1)"
                            destRow = Application.match(timeValue, wsDestL1.Columns(1), 0)
                            If Not IsError(destRow) Then
                                Set destCell = wsDestL1.Cells(destRow, col)
                                destCell.Value = subject & labCode ' Append labCode
                                ApplyBlackBorders destCell
                                AutoFitCell destCell ' Auto-fit the cell
                            End If
                        Case "(L2)", "(L-2)"
                            destRow = Application.match(timeValue, wsDestL2.Columns(1), 0)
                            If Not IsError(destRow) Then
                                Set destCell = wsDestL2.Cells(destRow, col)
                                destCell.Value = subject & labCode ' Append labCode
                                ApplyBlackBorders destCell
                                AutoFitCell destCell ' Auto-fit the cell
                            End If
                        Case "(L3)", "(L-3)"
                            destRow = Application.match(timeValue, wsDestL3.Columns(1), 0)
                            If Not IsError(destRow) Then
                                Set destCell = wsDestL3.Cells(destRow, col)
                                destCell.Value = subject & labCode ' Append labCode
                                ApplyBlackBorders destCell
                                AutoFitCell destCell ' Auto-fit the cell
                            End If
                    End Select
                Next match
            End If
        Next col
    Next cell

    MsgBox "Subjects have been added to their respective lab sheets based on time."
End Sub

' Subroutine to apply black borders to a cell
Sub ApplyBlackBorders(ByVal destCell As Range)
    With destCell.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Color = vbBlack
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With destCell.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Color = vbBlack
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With destCell.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Color = vbBlack
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With destCell.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Color = vbBlack
        .TintAndShade = 0
        .Weight = xlThin
    End With
End Sub

' Subroutine to auto-fit a cell based on its content
Sub AutoFitCell(ByVal destCell As Range)
    ' Auto-fit column width to match the content
    destCell.EntireColumn.AutoFit
    ' Auto-fit row height to match the content
    destCell.EntireRow.AutoFit
End Sub

